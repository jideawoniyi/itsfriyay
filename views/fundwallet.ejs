<!doctype html>
<html lang="en">
  <head>
    <title>Fund Wallet</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  </head>
  <body style="background-color: black; ">
    <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="#">Fundwallet</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#menu" aria-controls="menu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="menu">
          <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
            <% if (user) { %>
              <% const userdetails = user.username %>
              <% const walletId = user.wallet.id %>
              <% const page = '1' %>

              <li class="nav-item"><a class="nav-link" href="/update-profile">Edit Profile</a></li>
              <li class="nav-item"><a class="nav-link" href="/audit-trail/:page">Audit Trail</a></li>
              <li class="nav-item"><a class="nav-link" href="/users">Users</a></li>
              <li class="nav-item"><a class="nav-link" href="/dashboard">Dashboard</a></li>
              <li class="nav-item"><a class="nav-link" href="/chat">Chat</a></li>
              <li class="nav-item"><a class="nav-link" href="/logout/<%= user.username %>">Log out</a></li>
              <li class="nav-item"><a class="nav-link" href="/update-profile"><i class="fas fa-user fa-1x mr-1"></i> Hi, <%= user.username %></a> </li>
            <% } else { %>
              <li class="nav-item"><a class="nav-link" href="/">Login</a></li>
              <li class="nav-item"><a class="nav-link" href="/register">Register</a></li>
            <%
            } %>
          </ul>
      </div>
    </nav>
    <main>
      <div class="container" style="margin-top: 100px;">
        <div id="alert-fund-wallet" class="alert alert-success popover-dismiss" style="display:none"></div>
        <form id="formFundWallet" action="/fundwallet" method="post" style="display:block">
          <div class="form-group">
            <label style="color: white;" for="walletId">Wallet ID</label>
            <% const walletId = user.wallet.id; %>
          
            <input type="text" class="form-control" id="walletId" name="walletId" value="<%=walletId%>" readonly style="font-size: 10px;">
          </div>
          <div class="form-group">
            <label style="color: white;" for="amount">Amount</label>
            <input type="number" class="form-control" id="amount" name="amount" placeholder="Enter amount">
          </div>
          <button type="submit" id="btnFundWallet" class="btn btn-primary">Fund</button>
        </form>
      </div>
    </main>
    <script>
      function showFundWalletAlert(message) {
        const alertFundWallet = document.getElementById('alert-fund-wallet');
        alertFundWallet.innerHTML = message;
        alertFundWallet.style.display = "block";
        setTimeout(() => {
          alertFundWallet.style.display = "none";
        }, 5000);
      }
      const formFundWallet = document.getElementById("formFundWallet");
formFundWallet.addEventListener('submit', async (event) => {
event.preventDefault();
try {
const response = await fetch('/fundwallet', {
method: 'POST',
body: new FormData(formFundWallet),
});
  // check if the response is ok
  if (!response.ok) {
    throw new Error(response.statusText);
  }

  // parse the json data
  const data = await response.json();

  // check if the data is successful
  if (data.success) {
    showFundWalletAlert(data.message, 'success');
    document.getElementById('formFundWallet').style.display = 'none';
    document.getElementById('btnFundWallet').style.display = 'none';
  } else {
    showFundWalletAlert(data.message, 'error');
  }
} catch (error) {
  console.error(error);
}
});

window.onload = function () {
const formFundWallet = document.getElementById("formFundWallet");
handleFundWalletForm(formFundWallet);
}

function handleFundWalletForm(formFundWallet) {
formFundWallet.addEventListener('submit', async (event) => {
event.preventDefault();
try {
const response = await fetch('/fundwallet', {
method: 'POST',
body: new FormData(formFundWallet),
});
    // check if the response is ok
    if (!response.ok) {
      throw new Error(response.statusText);
    }

    // parse the json data
    const data = await response.json();

    // check if the data is successful
    if (data.success) {
      showFundWalletAlert(data.message, 'success');
      document.getElementById('formFundWallet').style.display = 'none';
      document.getElementById('btnFundWallet').style.display = 'none';
    } else {
// show the error message as an alert
const alertFundWallet = document.getElementById('alert-fund-wallet');
alertFundWallet.innerHTML = <div class="alert alert-danger popover-dismiss">${data.message}</div>;
alertFundWallet.style.display = "block";
}
} catch (error) {
console.error(error);
}
});

window.onload = function() {
const formFundWallet = document.getElementById('formFundWallet');
handleFundWalletForm(formFundWallet);
}
}
</script>

</body>
</html>